version: '3.7'
services:
  mysql_master:
    image: mysql:${DATABASE_VERSION}
    container_name: mysql_master
    ports:
      - ${MASTER_PORT}:3306
    expose:
      - "3306"
    environment: 
      - MYSQL_DATABASE=${MASTER_DATABASE}
      - MYSQL_USER=${MASTER_USER}
      - MYSQL_PASSWORD=${MASTER_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_MASTER_ROOT_PASSWORD}
      - MYSQL_HOST=${MASTER_HOST}
      - MYSQL_PORT=${MASTER_PORT}
      - MYSQL_SLAVE_ADDRESS=mysql_slave
      - MYSQL_REPLICATION_USER=${MYSQL_REPLICATION_USER}
      - MYSQL_REPLICATION_PASSWORD=${MYSQL_REPLICATION_PASSWORD}
    volumes:
      - ./src/db/replication/master/data:/var/lib/mysql:rw,cached
      - ./src/db/replication/master/conf:/etc/mysql/conf.d:rw,cached
    networks:
      - db

  mysql_slave:
    image: mysql:${DATABASE_VERSION}
    container_name: mysql_slave
    ports:
      - ${SLAVE_PORT}:3306
    expose:
      - "3306"
    environment: 
      - MYSQL_DATABASE=${SLAVE_DATABASE}
      - MYSQL_USER=${SLAVE_USER}
      - MYSQL_PASSWORD=${SLAVE_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_SLAVE_ROOT_PASSWORD}
      - MYSQL_HOST=${SLAVE_HOST}
      - MYSQL_PORT=${SLAVE_PORT}
      - MYSQL_MASTER_ADDRESS=mysql_master
      - MYSQL_REPLICATION_USER=${MYSQL_REPLICATION_USER}
      - MYSQL_REPLICATION_PASSWORD=${MYSQL_REPLICATION_PASSWORD}
    volumes:
      - ./src/db/replication/slave/data:/var/lib/mysql:rw,cached
      - ./src/db/replication/slave/conf:/etc/mysql/conf.d:rw,cached
    networks:
      - db

  elasticsearch:
    image: elasticsearch:${ELK_VERSION}
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=${ELASTICSEARCH_CLUSTER_NAME}
      - network.host=${ELASTICSEARCH_NETWORK_HOST}
      - http.port=${ELASTICSEARCH_PORT}
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data01:/usr/share/elasticsearch/data
    ports:
      - ${ELASTICSEARCH_PORT}:9200
    networks:
      - elastic
      - proxy

  es02:
    image: elasticsearch:${ELK_VERSION}
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=${ELASTICSEARCH_CLUSTER_NAME}
      - network.host=${ELASTICSEARCH_NETWORK_HOST}
      - http.port=${ELASTICSEARCH_PORT}
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data02:/usr/share/elasticsearch/data
    networks:
      - elastic

  es03:
    image: elasticsearch:${ELK_VERSION}
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=${ELASTICSEARCH_CLUSTER_NAME}
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data03:/usr/share/elasticsearch/data
    networks:
      - elastic

  kibana:
    image: kibana:${ELK_VERSION}
    container_name: kibana
    environment:
      SERVER_NAME: ${KIBANA_SERVER_NAME}
      ELASTICSEARCH_URL: http://elasticsearch:${ELASTICSEARCH_PORT}/
    ports:
      - ${KIBANA_PORT}:5601
    networks:
      - elastic
      - proxy

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
        - ${NGINX_PORT}:80
        - 443:443
    volumes:
        - ${PWD}/nginx/dev/:/etc/nginx/conf.d/
        - ./src/security/secrets/.htpasswd:/etc/nginx/.htpasswd
        - ./src/security/secrets/public-cert.crt:/etc/ssl/public-cert.crt
        - ./src/security/secrets/private-key.key:/etc/ssl/private-key.key
    ulimits:
      nproc: 65535
    networks:
      - proxy

networks: 
  elastic:
    driver: bridge
  proxy:
    driver: bridge
  db: 
    driver: bridge

volumes:
  es-data01:
    driver: local
  es-data02:
    driver: local
  es-data03:
    driver: local
